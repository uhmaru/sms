# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `mongo_session_store` gem.
# Please instead update this file by running `bin/tapioca gem mongo_session_store`.


# source://mongo_session_store//lib/mongo_session_store/mongo_store_base.rb#3
module ActionDispatch
  # source://actionpack/8.0.2/lib/action_dispatch.rb#141
  def eager_load!; end

  # source://actionpack/8.0.2/lib/action_dispatch.rb#127
  def test_app; end

  # source://actionpack/8.0.2/lib/action_dispatch.rb#127
  def test_app=(val); end

  class << self
    # source://actionpack/8.0.2/lib/action_dispatch/deprecator.rb#6
    def deprecator; end

    # source://actionpack/8.0.2/lib/action_dispatch.rb#127
    def test_app; end

    # source://actionpack/8.0.2/lib/action_dispatch.rb#127
    def test_app=(val); end
  end
end

# source://mongo_session_store//lib/mongo_session_store/mongo_store_base.rb#4
module ActionDispatch::Session
  class << self
    # source://actionpack/8.0.2/lib/action_dispatch.rb#113
    def resolve_store(session_store); end
  end
end

# source://mongo_session_store//lib/mongo_session_store/mongo_store_base.rb#5
class ActionDispatch::Session::MongoStoreBase < ::ActionDispatch::Session::AbstractStore
  private

  # source://mongo_session_store//lib/mongo_session_store/mongo_store_base.rb#63
  def delete_session(req, sid, options); end

  # source://mongo_session_store//lib/mongo_session_store/mongo_store_base.rb#72
  def destroy(env, sid); end

  # source://mongo_session_store//lib/mongo_session_store/mongo_store_base.rb#67
  def destroy_session(env, sid, options); end

  # source://mongo_session_store//lib/mongo_session_store/mongo_store_base.rb#48
  def find_or_initialize_session(id); end

  # source://mongo_session_store//lib/mongo_session_store/mongo_store_base.rb#24
  def find_session(req, sid); end

  # source://mongo_session_store//lib/mongo_session_store/mongo_store_base.rb#28
  def get_session(env, sid); end

  # source://mongo_session_store//lib/mongo_session_store/mongo_store_base.rb#55
  def get_session_record(env, sid); end

  # source://mongo_session_store//lib/mongo_session_store/mongo_store_base.rb#20
  def session_class; end

  # source://mongo_session_store//lib/mongo_session_store/mongo_store_base.rb#38
  def set_session(env, sid, session_data, _options = T.unsafe(nil)); end

  # source://mongo_session_store//lib/mongo_session_store/mongo_store_base.rb#34
  def write_session(req, sid, session_data, options); end

  class << self
    # source://mongo_session_store//lib/mongo_session_store/mongo_store_base.rb#14
    def session_class; end
  end
end

# source://mongo_session_store//lib/mongo_session_store/mongo_store_base.rb#7
ActionDispatch::Session::MongoStoreBase::ENV_SESSION_OPTIONS_KEY = T.let(T.unsafe(nil), String)

# source://mongo_session_store//lib/mongo_session_store/mongo_store_base.rb#6
ActionDispatch::Session::MongoStoreBase::SESSION_RECORD_KEY = T.let(T.unsafe(nil), String)

# source://mongo_session_store//lib/mongo_session_store/mongoid_store.rb#5
class ActionDispatch::Session::MongoidStore < ::ActionDispatch::Session::MongoStoreBase; end

# source://mongo_session_store//lib/mongo_session_store/mongoid_store.rb#6
class ActionDispatch::Session::MongoidStore::Session
  include ::ActiveModel::Validations
  include ::ActiveSupport::Callbacks
  include ::ActiveModel::Validations::HelperMethods
  include ::ActiveModel::Conversion
  include ::ActiveModel::ForbiddenAttributesProtection
  include ::ActiveModel::AttributeAssignment
  include ::ActiveModel::API
  include ::ActiveModel::Access
  include ::ActiveModel::Model
  include ::ActiveModel::Serialization
  include ::ActiveModel::Serializers::JSON
  include ::Mongoid::Atomic
  include ::Mongoid::Changeable
  include ::Mongoid::Clients::StorageOptions
  include ::Mongoid::Clients::Options
  include ::Mongoid::Clients::Sessions
  include ::Mongoid::Clients
  include ::Mongoid::CollectionConfigurable
  include ::Mongoid::Attributes::Nested
  include ::Mongoid::Attributes::Readonly
  include ::Mongoid::Attributes::Processing
  include ::Mongoid::Attributes
  include ::Mongoid::Fields
  include ::Mongoid::Indexable
  include ::Mongoid::Matchable
  include ::Mongoid::Persistable::Creatable
  include ::Mongoid::Persistable::Deletable
  include ::Mongoid::Persistable::Destroyable
  include ::Mongoid::Persistable::Incrementable
  include ::Mongoid::Persistable::Logical
  include ::Mongoid::Persistable::Poppable
  include ::Mongoid::Persistable::Pullable
  include ::Mongoid::Persistable::Pushable
  include ::Mongoid::Persistable::Renamable
  include ::Mongoid::Persistable::Settable
  include ::Mongoid::Persistable::Unsettable
  include ::Mongoid::Positional
  include ::Mongoid::Persistable::Savable
  include ::Mongoid::Persistable::Updatable
  include ::Mongoid::Persistable::Upsertable
  include ::Mongoid::Persistable
  include ::Mongoid::Association::Embedded::Cyclic
  include ::Mongoid::Association::Referenced::AutoSave
  include ::Mongoid::Association::Referenced::CounterCache
  include ::Mongoid::Association::Accessors
  include ::Mongoid::Association::Depending
  include ::Mongoid::Association::Builders
  include ::Mongoid::Association::Macros
  include ::Mongoid::Association::Reflections
  include ::Mongoid::Association::Referenced::Syncable
  include ::Mongoid::Association
  include ::Mongoid::Scopable
  include ::Mongoid::Selectable
  include ::Mongoid::Serializable
  include ::Mongoid::Shardable
  include ::Mongoid::Cacheable
  include ::Mongoid::Threaded::Lifecycle
  include ::Mongoid::Traversable
  include ::Mongoid::Validatable
  include ::Mongoid::Validatable::Macros
  include ::Mongoid::Interceptable
  include ::ActiveModel::Validations::Callbacks
  include ::Mongoid::Copyable
  include ::Mongoid::Equality
  include ::Mongoid::Evolvable
  include ::Mongoid::Inspectable
  include ::Mongoid::Reloadable
  include ::Mongoid::Stateful
  include ::Mongoid::Composable
  include ::Mongoid::Touchable::InstanceMethods
  include ::Mongoid::Document
  include ::Mongoid::Timestamps::Created
  include ::Mongoid::Timestamps::Timeless
  include ::Mongoid::Timestamps::Updated
  include ::Mongoid::Timestamps
  extend ::ActiveModel::Validations::ClassMethods
  extend ::ActiveModel::Naming
  extend ::ActiveModel::Callbacks
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker
  extend ::ActiveModel::Translation
  extend ::ActiveModel::Validations::HelperMethods
  extend ::ActiveModel::Conversion::ClassMethods
  extend ::Mongoid::Changeable::ClassMethods
  extend ::Mongoid::Clients::StorageOptions::ClassMethods
  extend ::Mongoid::Clients::Options::ClassMethods
  extend ::Mongoid::Clients::Sessions::ClassMethods
  extend ::Mongoid::CollectionConfigurable::ClassMethods
  extend ::Mongoid::Attributes::Nested::ClassMethods
  extend ::Mongoid::Attributes::Readonly::ClassMethods
  extend ::Mongoid::Attributes::ClassMethods
  extend ::Mongoid::Fields::ClassMethods
  extend ::Mongoid::Indexable::ClassMethods
  extend ::Mongoid::Persistable::Creatable::ClassMethods
  extend ::Mongoid::Persistable::Deletable::ClassMethods
  extend ::Mongoid::Persistable::Destroyable::ClassMethods
  extend ::Mongoid::Association::Embedded::Cyclic::ClassMethods
  extend ::Mongoid::Association::Referenced::CounterCache::ClassMethods
  extend ::Mongoid::Association::Depending::ClassMethods
  extend ::Mongoid::Association::Macros::ClassMethods
  extend ::Mongoid::Association::Reflections::ClassMethods
  extend ::Mongoid::Association::Referenced::Syncable::ClassMethods
  extend ::Mongoid::Scopable::ClassMethods
  extend ::Mongoid::Shardable::ClassMethods
  extend ::Mongoid::Threaded::Lifecycle::ClassMethods
  extend ::Mongoid::Traversable::ClassMethods
  extend ::Mongoid::Traversable::DiscriminatorRetrieval
  extend ::Mongoid::Validatable::ClassMethods
  extend ::Mongoid::Validatable::Macros
  extend ::ActiveModel::Validations::Callbacks::ClassMethods
  extend ::Mongoid::Equality::ClassMethods
  extend ::Mongoid::Findable
  extend ::OrmAdapter::ToAdapter
  extend ::Mongoid::Document::ClassMethods
  extend ::Mongoid::Timestamps::Timeless::ClassMethods
  extend ::Mongoid::Traversable::DiscriminatorAssignment

  # source://mongo_session_store//lib/mongo_session_store/mongoid_store.rb#14
  def ___data_default__; end

  # source://mongoid/8.1.10/lib/mongoid/fields.rb#142
  def ___id_default__; end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#69
  def __callbacks; end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#924
  def _build_callbacks; end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#924
  def _create_callbacks; end

  # source://mongoid/8.1.10/lib/mongoid/scopable.rb#12
  def _declared_scopes; end

  # source://mongoid/8.1.10/lib/mongoid/scopable.rb#12
  def _declared_scopes=(_arg0); end

  # source://mongoid/8.1.10/lib/mongoid/scopable.rb#12
  def _declared_scopes?; end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#924
  def _destroy_callbacks; end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#924
  def _find_callbacks; end

  # source://mongoid/8.1.10/lib/mongoid/atomic.rb#27
  def _index; end

  # source://mongoid/8.1.10/lib/mongoid/atomic.rb#27
  def _index=(_arg0); end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#924
  def _initialize_callbacks; end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#924
  def _persist_parent_callbacks; end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#912
  def _run_build_callbacks(&block); end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#912
  def _run_create_callbacks(&block); end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#912
  def _run_destroy_callbacks(&block); end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#912
  def _run_find_callbacks(&block); end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#912
  def _run_initialize_callbacks(&block); end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#912
  def _run_persist_parent_callbacks(&block); end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#912
  def _run_save_callbacks(&block); end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#912
  def _run_touch_callbacks(&block); end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#912
  def _run_update_callbacks(&block); end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#912
  def _run_upsert_callbacks(&block); end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#912
  def _run_validate_callbacks(&block); end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#912
  def _run_validation_callbacks(&block); end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#924
  def _save_callbacks; end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#924
  def _touch_callbacks; end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#924
  def _update_callbacks; end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#924
  def _upsert_callbacks; end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#924
  def _validate_callbacks; end

  # source://activesupport/8.0.2/lib/active_support/callbacks.rb#924
  def _validation_callbacks; end

  # source://activemodel/8.0.2/lib/active_model/validations.rb#50
  def _validators; end

  # source://activemodel/8.0.2/lib/active_model/validations.rb#50
  def _validators?; end

  # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#36
  def aliased_associations; end

  # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#36
  def aliased_associations=(_arg0); end

  # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#36
  def aliased_associations?; end

  # source://mongoid/8.1.10/lib/mongoid/fields.rb#128
  def aliased_fields; end

  # source://mongoid/8.1.10/lib/mongoid/fields.rb#128
  def aliased_fields=(_arg0); end

  # source://mongoid/8.1.10/lib/mongoid/fields.rb#128
  def aliased_fields?; end

  # source://mongoid/8.1.10/lib/mongoid/interceptable.rb#46
  def before_callback_halted; end

  # source://mongoid/8.1.10/lib/mongoid/interceptable.rb#46
  def before_callback_halted=(_arg0); end

  # source://mongoid/8.1.10/lib/mongoid/cacheable.rb#10
  def cache_timestamp_format; end

  # source://mongoid/8.1.10/lib/mongoid/association/embedded/cyclic.rb#13
  def cyclic; end

  # source://mongoid/8.1.10/lib/mongoid/association/embedded/cyclic.rb#13
  def cyclic=(_arg0); end

  # source://mongoid/8.1.10/lib/mongoid/association/embedded/cyclic.rb#13
  def cyclic?; end

  # source://mongo_session_store//lib/mongo_session_store/mongoid_store.rb#20
  def data; end

  # Sets the attribute data
  #
  # @param value the value to set the attribute data to.
  #
  # source://mongo_session_store//lib/mongo_session_store/mongoid_store.rb#10
  def data=(_arg0); end

  # source://mongoid/8.1.10/lib/mongoid/scopable.rb#11
  def default_scoping; end

  # source://mongoid/8.1.10/lib/mongoid/scopable.rb#11
  def default_scoping=(_arg0); end

  # source://mongoid/8.1.10/lib/mongoid/scopable.rb#11
  def default_scoping?; end

  # source://mongoid/8.1.10/lib/mongoid/association/depending.rb#12
  def dependents; end

  # source://mongoid/8.1.10/lib/mongoid/association/depending.rb#12
  def dependents=(_arg0); end

  # source://mongoid/8.1.10/lib/mongoid/association/depending.rb#12
  def dependents?; end

  # source://mongoid/8.1.10/lib/mongoid/association/depending.rb#15
  def dependents_owner; end

  # source://mongoid/8.1.10/lib/mongoid/association/depending.rb#15
  def dependents_owner=(_arg0); end

  # source://mongoid/8.1.10/lib/mongoid/association/depending.rb#15
  def dependents_owner?; end

  # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#12
  def embedded=(_arg0); end

  # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#13
  def embedded_relations; end

  # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#13
  def embedded_relations=(_arg0); end

  # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#13
  def embedded_relations?; end

  # source://mongoid/8.1.10/lib/mongoid/fields.rb#130
  def fields; end

  # source://mongoid/8.1.10/lib/mongoid/fields.rb#130
  def fields=(_arg0); end

  # source://mongoid/8.1.10/lib/mongoid/fields.rb#130
  def fields?; end

  # source://mongoid/8.1.10/lib/mongoid/fields.rb#649
  def id; end

  # source://mongoid/8.1.10/lib/mongoid/fields.rb#695
  def id=(value); end

  # source://mongoid/8.1.10/lib/mongoid/fields.rb#716
  def id?; end

  # source://mongoid/8.1.10/lib/mongoid/fields.rb#673
  def id_before_type_cast; end

  # source://mongoid/8.1.10/lib/mongoid/changeable.rb#376
  def id_change; end

  # source://mongoid/8.1.10/lib/mongoid/changeable.rb#391
  def id_changed?(**kwargs); end

  # source://mongoid/8.1.10/lib/mongoid/changeable.rb#424
  def id_was; end

  # source://mongoid/8.1.10/lib/mongoid/changeable.rb#451
  def id_will_change!; end

  # source://activemodel/8.0.2/lib/active_model/serializers/json.rb#15
  def include_root_in_json; end

  # source://activemodel/8.0.2/lib/active_model/serializers/json.rb#15
  def include_root_in_json?; end

  # source://mongoid/8.1.10/lib/mongoid/indexable.rb#14
  def index_specifications; end

  # source://mongoid/8.1.10/lib/mongoid/indexable.rb#14
  def index_specifications=(val); end

  # source://mongoid/8.1.10/lib/mongoid/fields.rb#129
  def localized_fields; end

  # source://mongoid/8.1.10/lib/mongoid/fields.rb#129
  def localized_fields=(_arg0); end

  # source://mongoid/8.1.10/lib/mongoid/fields.rb#129
  def localized_fields?; end

  # source://activemodel/8.0.2/lib/active_model/naming.rb#255
  def model_name(&_arg0); end

  # source://mongoid/8.1.10/lib/mongoid/attributes/nested.rb#11
  def nested_attributes; end

  # source://mongoid/8.1.10/lib/mongoid/attributes/nested.rb#11
  def nested_attributes=(_arg0); end

  # source://mongoid/8.1.10/lib/mongoid/attributes/nested.rb#11
  def nested_attributes?; end

  # source://activemodel/8.0.2/lib/active_model/conversion.rb#32
  def param_delimiter=(_arg0); end

  # source://mongoid/8.1.10/lib/mongoid/association.rb#49
  def polymorphic; end

  # source://mongoid/8.1.10/lib/mongoid/association.rb#49
  def polymorphic=(_arg0); end

  # source://mongoid/8.1.10/lib/mongoid/association.rb#49
  def polymorphic?; end

  # source://mongoid/8.1.10/lib/mongoid/fields.rb#132
  def post_processed_defaults; end

  # source://mongoid/8.1.10/lib/mongoid/fields.rb#132
  def post_processed_defaults=(_arg0); end

  # source://mongoid/8.1.10/lib/mongoid/fields.rb#132
  def post_processed_defaults?; end

  # source://mongoid/8.1.10/lib/mongoid/fields.rb#131
  def pre_processed_defaults; end

  # source://mongoid/8.1.10/lib/mongoid/fields.rb#131
  def pre_processed_defaults=(_arg0); end

  # source://mongoid/8.1.10/lib/mongoid/fields.rb#131
  def pre_processed_defaults?; end

  # source://mongoid/8.1.10/lib/mongoid/attributes/readonly.rb#11
  def readonly_attributes; end

  # source://mongoid/8.1.10/lib/mongoid/attributes/readonly.rb#11
  def readonly_attributes=(_arg0); end

  # source://mongoid/8.1.10/lib/mongoid/attributes/readonly.rb#11
  def readonly_attributes?; end

  # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#14
  def relations; end

  # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#14
  def relations=(_arg0); end

  # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#14
  def relations?; end

  # source://mongo_session_store//lib/mongo_session_store/mongoid_store.rb#24
  def reload; end

  # source://mongoid/8.1.10/lib/mongoid/changeable.rb#466
  def reset_id!; end

  # source://mongoid/8.1.10/lib/mongoid/changeable.rb#481
  def reset_id_to_default!; end

  # source://mongoid/8.1.10/lib/mongoid/shardable.rb#35
  def shard_config; end

  # source://mongoid/8.1.10/lib/mongoid/shardable.rb#35
  def shard_config=(val); end

  # source://mongoid/8.1.10/lib/mongoid/shardable.rb#15
  def shard_key_fields; end

  # source://mongoid/8.1.10/lib/mongoid/shardable.rb#15
  def shard_key_fields=(val); end

  # source://mongoid/8.1.10/lib/mongoid/clients/storage_options.rb#9
  def storage_options; end

  # source://mongoid/8.1.10/lib/mongoid/clients/storage_options.rb#9
  def storage_options?; end

  # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#40
  def stored_as_associations; end

  # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#40
  def stored_as_associations=(_arg0); end

  # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#40
  def stored_as_associations?; end

  private

  # source://mongo_session_store//lib/mongo_session_store/mongoid_store.rb#35
  def pack(data); end

  # source://mongo_session_store//lib/mongo_session_store/mongoid_store.rb#39
  def unpack(packed); end

  class << self
    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#69
    def __callbacks; end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#69
    def __callbacks=(value); end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#916
    def _build_callbacks; end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#920
    def _build_callbacks=(value); end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#916
    def _create_callbacks; end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#920
    def _create_callbacks=(value); end

    # source://mongoid/8.1.10/lib/mongoid/scopable.rb#12
    def _declared_scopes; end

    # source://mongoid/8.1.10/lib/mongoid/scopable.rb#12
    def _declared_scopes=(value); end

    # source://mongoid/8.1.10/lib/mongoid/scopable.rb#12
    def _declared_scopes?; end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#916
    def _destroy_callbacks; end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#920
    def _destroy_callbacks=(value); end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#916
    def _find_callbacks; end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#920
    def _find_callbacks=(value); end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#916
    def _initialize_callbacks; end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#920
    def _initialize_callbacks=(value); end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#916
    def _persist_parent_callbacks; end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#920
    def _persist_parent_callbacks=(value); end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#916
    def _save_callbacks; end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#920
    def _save_callbacks=(value); end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#916
    def _touch_callbacks; end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#920
    def _touch_callbacks=(value); end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#916
    def _update_callbacks; end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#920
    def _update_callbacks=(value); end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#916
    def _upsert_callbacks; end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#920
    def _upsert_callbacks=(value); end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#916
    def _validate_callbacks; end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#920
    def _validate_callbacks=(value); end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#916
    def _validation_callbacks; end

    # source://activesupport/8.0.2/lib/active_support/callbacks.rb#920
    def _validation_callbacks=(value); end

    # source://activemodel/8.0.2/lib/active_model/validations.rb#50
    def _validators; end

    # source://activemodel/8.0.2/lib/active_model/validations.rb#50
    def _validators=(value); end

    # source://activemodel/8.0.2/lib/active_model/validations.rb#50
    def _validators?; end

    # source://mongoid/8.1.10/lib/mongoid/traversable.rb#121
    def add_discriminator_mapping(value, klass = T.unsafe(nil)); end

    # source://activemodel/8.0.2/lib/active_model/callbacks.rb#144
    def after_build(*args, **options, &block); end

    # source://activemodel/8.0.2/lib/active_model/callbacks.rb#144
    def after_create(*args, **options, &block); end

    # source://activemodel/8.0.2/lib/active_model/callbacks.rb#144
    def after_destroy(*args, **options, &block); end

    # source://activemodel/8.0.2/lib/active_model/callbacks.rb#144
    def after_find(*args, **options, &block); end

    # source://activemodel/8.0.2/lib/active_model/callbacks.rb#144
    def after_initialize(*args, **options, &block); end

    # source://activemodel/8.0.2/lib/active_model/callbacks.rb#144
    def after_persist_parent(*args, **options, &block); end

    # source://activemodel/8.0.2/lib/active_model/callbacks.rb#144
    def after_save(*args, **options, &block); end

    # source://activemodel/8.0.2/lib/active_model/callbacks.rb#144
    def after_touch(*args, **options, &block); end

    # source://activemodel/8.0.2/lib/active_model/callbacks.rb#144
    def after_update(*args, **options, &block); end

    # source://activemodel/8.0.2/lib/active_model/callbacks.rb#144
    def after_upsert(*args, **options, &block); end

    # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#36
    def aliased_associations; end

    # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#36
    def aliased_associations=(value); end

    # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#36
    def aliased_associations?; end

    # source://mongoid/8.1.10/lib/mongoid/fields.rb#128
    def aliased_fields; end

    # source://mongoid/8.1.10/lib/mongoid/fields.rb#128
    def aliased_fields=(value); end

    # source://mongoid/8.1.10/lib/mongoid/fields.rb#128
    def aliased_fields?; end

    # source://activemodel/8.0.2/lib/active_model/callbacks.rb#137
    def around_create(*args, **options, &block); end

    # source://activemodel/8.0.2/lib/active_model/callbacks.rb#137
    def around_destroy(*args, **options, &block); end

    # source://activemodel/8.0.2/lib/active_model/callbacks.rb#137
    def around_persist_parent(*args, **options, &block); end

    # source://activemodel/8.0.2/lib/active_model/callbacks.rb#137
    def around_save(*args, **options, &block); end

    # source://activemodel/8.0.2/lib/active_model/callbacks.rb#137
    def around_update(*args, **options, &block); end

    # source://activemodel/8.0.2/lib/active_model/callbacks.rb#137
    def around_upsert(*args, **options, &block); end

    # source://activemodel/8.0.2/lib/active_model/callbacks.rb#130
    def before_create(*args, **options, &block); end

    # source://activemodel/8.0.2/lib/active_model/callbacks.rb#130
    def before_destroy(*args, **options, &block); end

    # source://activemodel/8.0.2/lib/active_model/callbacks.rb#130
    def before_persist_parent(*args, **options, &block); end

    # source://activemodel/8.0.2/lib/active_model/callbacks.rb#130
    def before_save(*args, **options, &block); end

    # source://activemodel/8.0.2/lib/active_model/callbacks.rb#130
    def before_update(*args, **options, &block); end

    # source://activemodel/8.0.2/lib/active_model/callbacks.rb#130
    def before_upsert(*args, **options, &block); end

    # source://mongoid/8.1.10/lib/mongoid/cacheable.rb#10
    def cache_timestamp_format; end

    # source://mongoid/8.1.10/lib/mongoid/cacheable.rb#10
    def cache_timestamp_format=(val); end

    # source://mongoid/8.1.10/lib/mongoid/association/embedded/cyclic.rb#13
    def cyclic; end

    # source://mongoid/8.1.10/lib/mongoid/association/embedded/cyclic.rb#13
    def cyclic=(value); end

    # source://mongoid/8.1.10/lib/mongoid/association/embedded/cyclic.rb#13
    def cyclic?; end

    # source://mongoid/8.1.10/lib/mongoid/scopable.rb#11
    def default_scoping; end

    # source://mongoid/8.1.10/lib/mongoid/scopable.rb#11
    def default_scoping=(value); end

    # source://mongoid/8.1.10/lib/mongoid/scopable.rb#11
    def default_scoping?; end

    # source://mongoid/8.1.10/lib/mongoid/association/depending.rb#12
    def dependents; end

    # source://mongoid/8.1.10/lib/mongoid/association/depending.rb#12
    def dependents=(value); end

    # source://mongoid/8.1.10/lib/mongoid/association/depending.rb#12
    def dependents?; end

    # source://mongoid/8.1.10/lib/mongoid/association/depending.rb#15
    def dependents_owner; end

    # source://mongoid/8.1.10/lib/mongoid/association/depending.rb#15
    def dependents_owner=(value); end

    # source://mongoid/8.1.10/lib/mongoid/association/depending.rb#15
    def dependents_owner?; end

    # source://mongoid/8.1.10/lib/mongoid/traversable.rb#104
    def discriminator_key(*_arg0, **_arg1, &_arg2); end

    # source://mongoid/8.1.10/lib/mongoid/traversable.rb#46
    def discriminator_key=(value); end

    # source://mongoid/8.1.10/lib/mongoid/traversable.rb#101
    def discriminator_key?; end

    # source://mongoid/8.1.10/lib/mongoid/traversable.rb#111
    def discriminator_mapping; end

    # source://mongoid/8.1.10/lib/mongoid/traversable.rb#111
    def discriminator_mapping=(_arg0); end

    # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#12
    def embedded; end

    # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#12
    def embedded=(value); end

    # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#12
    def embedded?; end

    # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#13
    def embedded_relations; end

    # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#13
    def embedded_relations=(value); end

    # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#13
    def embedded_relations?; end

    # source://mongoid/8.1.10/lib/mongoid/fields.rb#130
    def fields; end

    # source://mongoid/8.1.10/lib/mongoid/fields.rb#130
    def fields=(value); end

    # source://mongoid/8.1.10/lib/mongoid/fields.rb#130
    def fields?; end

    # source://mongoid/8.1.10/lib/mongoid/traversable.rb#136
    def get_discriminator_mapping(value); end

    # source://mongoid/8.1.10/lib/mongoid/serializable.rb#15
    def include_root_in_json; end

    # source://mongoid/8.1.10/lib/mongoid/serializable.rb#19
    def include_root_in_json=(new_value); end

    # source://activemodel/8.0.2/lib/active_model/serializers/json.rb#15
    def include_root_in_json?; end

    # source://mongoid/8.1.10/lib/mongoid/indexable.rb#14
    def index_specifications; end

    # source://mongoid/8.1.10/lib/mongoid/indexable.rb#14
    def index_specifications=(val); end

    # source://mongoid/8.1.10/lib/mongoid/fields.rb#129
    def localized_fields; end

    # source://mongoid/8.1.10/lib/mongoid/fields.rb#129
    def localized_fields=(value); end

    # source://mongoid/8.1.10/lib/mongoid/fields.rb#129
    def localized_fields?; end

    # source://mongoid/8.1.10/lib/mongoid/attributes/nested.rb#11
    def nested_attributes; end

    # source://mongoid/8.1.10/lib/mongoid/attributes/nested.rb#11
    def nested_attributes=(value); end

    # source://mongoid/8.1.10/lib/mongoid/attributes/nested.rb#11
    def nested_attributes?; end

    # source://mongo_session_store//lib/mongo_session_store/mongoid_store.rb#16
    def pack(data); end

    # source://activemodel/8.0.2/lib/active_model/conversion.rb#32
    def param_delimiter; end

    # source://activemodel/8.0.2/lib/active_model/conversion.rb#32
    def param_delimiter=(value); end

    # source://activemodel/8.0.2/lib/active_model/conversion.rb#32
    def param_delimiter?; end

    # source://mongoid/8.1.10/lib/mongoid/association.rb#49
    def polymorphic; end

    # source://mongoid/8.1.10/lib/mongoid/association.rb#49
    def polymorphic=(value); end

    # source://mongoid/8.1.10/lib/mongoid/association.rb#49
    def polymorphic?; end

    # source://mongoid/8.1.10/lib/mongoid/fields.rb#132
    def post_processed_defaults; end

    # source://mongoid/8.1.10/lib/mongoid/fields.rb#132
    def post_processed_defaults=(value); end

    # source://mongoid/8.1.10/lib/mongoid/fields.rb#132
    def post_processed_defaults?; end

    # source://mongoid/8.1.10/lib/mongoid/fields.rb#131
    def pre_processed_defaults; end

    # source://mongoid/8.1.10/lib/mongoid/fields.rb#131
    def pre_processed_defaults=(value); end

    # source://mongoid/8.1.10/lib/mongoid/fields.rb#131
    def pre_processed_defaults?; end

    # source://mongoid/8.1.10/lib/mongoid/attributes/readonly.rb#11
    def readonly_attributes; end

    # source://mongoid/8.1.10/lib/mongoid/attributes/readonly.rb#11
    def readonly_attributes=(value); end

    # source://mongoid/8.1.10/lib/mongoid/attributes/readonly.rb#11
    def readonly_attributes?; end

    # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#14
    def relations; end

    # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#14
    def relations=(value); end

    # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#14
    def relations?; end

    # source://mongoid/8.1.10/lib/mongoid/shardable.rb#35
    def shard_config; end

    # source://mongoid/8.1.10/lib/mongoid/shardable.rb#35
    def shard_config=(val); end

    # source://mongoid/8.1.10/lib/mongoid/shardable.rb#15
    def shard_key_fields; end

    # source://mongoid/8.1.10/lib/mongoid/shardable.rb#15
    def shard_key_fields=(val); end

    # source://mongoid/8.1.10/lib/mongoid/clients/storage_options.rb#9
    def storage_options; end

    # source://mongoid/8.1.10/lib/mongoid/clients/storage_options.rb#9
    def storage_options=(value); end

    # source://mongoid/8.1.10/lib/mongoid/clients/storage_options.rb#9
    def storage_options?; end

    # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#40
    def stored_as_associations; end

    # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#40
    def stored_as_associations=(value); end

    # source://mongoid/8.1.10/lib/mongoid/association/macros.rb#40
    def stored_as_associations?; end

    private

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#15
    def __class_attr___callbacks; end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#17
    def __class_attr___callbacks=(new_value); end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#15
    def __class_attr__declared_scopes; end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#17
    def __class_attr__declared_scopes=(new_value); end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#15
    def __class_attr__validators; end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#17
    def __class_attr__validators=(new_value); end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#15
    def __class_attr_aliased_associations; end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#17
    def __class_attr_aliased_associations=(new_value); end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#15
    def __class_attr_aliased_fields; end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#17
    def __class_attr_aliased_fields=(new_value); end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#15
    def __class_attr_cyclic; end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#17
    def __class_attr_cyclic=(new_value); end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#15
    def __class_attr_default_scoping; end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#17
    def __class_attr_default_scoping=(new_value); end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#15
    def __class_attr_dependents; end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#17
    def __class_attr_dependents=(new_value); end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#15
    def __class_attr_dependents_owner; end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#17
    def __class_attr_dependents_owner=(new_value); end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#15
    def __class_attr_discriminator_key; end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#17
    def __class_attr_discriminator_key=(new_value); end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#15
    def __class_attr_embedded; end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#17
    def __class_attr_embedded=(new_value); end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#15
    def __class_attr_embedded_relations; end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#17
    def __class_attr_embedded_relations=(new_value); end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#15
    def __class_attr_fields; end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#17
    def __class_attr_fields=(new_value); end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#15
    def __class_attr_include_root_in_json; end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#17
    def __class_attr_include_root_in_json=(new_value); end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#15
    def __class_attr_localized_fields; end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#17
    def __class_attr_localized_fields=(new_value); end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#15
    def __class_attr_nested_attributes; end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#17
    def __class_attr_nested_attributes=(new_value); end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#15
    def __class_attr_param_delimiter; end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#17
    def __class_attr_param_delimiter=(new_value); end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#15
    def __class_attr_polymorphic; end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#17
    def __class_attr_polymorphic=(new_value); end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#15
    def __class_attr_post_processed_defaults; end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#17
    def __class_attr_post_processed_defaults=(new_value); end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#15
    def __class_attr_pre_processed_defaults; end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#17
    def __class_attr_pre_processed_defaults=(new_value); end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#15
    def __class_attr_readonly_attributes; end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#17
    def __class_attr_readonly_attributes=(new_value); end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#15
    def __class_attr_relations; end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#17
    def __class_attr_relations=(new_value); end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#15
    def __class_attr_storage_options; end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#17
    def __class_attr_storage_options=(new_value); end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#15
    def __class_attr_stored_as_associations; end

    # source://activesupport/8.0.2/lib/active_support/class_attribute.rb#17
    def __class_attr_stored_as_associations=(new_value); end
  end
end

# source://mongo_session_store//lib/mongo_session_store.rb#1
module MongoSessionStore
  class << self
    # source://mongo_session_store//lib/mongo_session_store.rb#4
    def collection_name; end

    # source://mongo_session_store//lib/mongo_session_store.rb#8
    def collection_name=(name); end
  end
end

# source://mongo_session_store//lib/mongo_session_store.rb#2
class MongoSessionStore::Error < ::StandardError; end

# source://mongo_session_store//lib/mongo_session_store/mongoid_store.rb#52
MongoidStore = ActionDispatch::Session::MongoidStore
